{"ast":null,"code":"var _jsxFileName = \"/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst Task = ({\n  taskName,\n  projectName,\n  formattedTime,\n  onDelete\n}) => {\n  const [remainingTime, setRemainingTime] = useState(0);\n\n  const deleteAction = () => {\n    onDelete(taskName);\n  };\n\n  const getFormattedTimeInSec = ftime => {\n    const timeArray = ftime.split(\":\");\n    return parseInt(timeArray[0] * 60 * 60) + parseInt(timeArray[1] * 60);\n  };\n\n  useEffect(() => {\n    setRemainingTime(getFormattedTimeInSec(formattedTime));\n    return () => {\n      setRemainingTime(0);\n    };\n  }, []);\n  useEffect(() => {\n    let timerRef;\n\n    try {\n      if (remainingTime) {\n        timerRef = setTimeout(() => setRemainingTime(remainingTime - 1), 1000);\n      }\n    } catch (err) {\n      console.log(\"err: \", err);\n    }\n\n    return () => {\n      clearTimeout(timerRef);\n    };\n  }, [remainingTime]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'lightgrey',\n      margin: 5,\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 18,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, taskName), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 22,\n      marginRight: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, remainingTime), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    style: {\n      fontSize: 10\n    },\n    onClick: deleteAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"X\"), ' ')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 14,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, projectName), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, ` (Total time in [hh:mm] is ${formattedTime})`)));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/Task.js"],"names":["React","useState","useEffect","Button","Task","taskName","projectName","formattedTime","onDelete","remainingTime","setRemainingTime","deleteAction","getFormattedTimeInSec","ftime","timeArray","split","parseInt","timerRef","setTimeout","err","console","log","clearTimeout","backgroundColor","margin","padding","fontSize","flex","float","marginRight","marginTop","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AAEjE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAD,CAAlD;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMO,qBAAqB,GAAIC,KAAD,IAAW;AACrC,UAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAlB;AACA,WAAOC,QAAQ,CAACF,SAAS,CAAC,CAAD,CAAT,GAAe,EAAf,GAAoB,EAArB,CAAR,GAAmCE,QAAQ,CAACF,SAAS,CAAC,CAAD,CAAT,GAAe,EAAhB,CAAlD;AACH,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,gBAAgB,CAACE,qBAAqB,CAACL,aAAD,CAAtB,CAAhB;AACA,WAAO,MAAM;AACTG,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,QAAJ;;AACA,QAAI;AACA,UAAIR,aAAJ,EAAmB;AACfQ,QAAAA,QAAQ,GAAGC,UAAU,CAAC,MAAOR,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAxB,EAA6C,IAA7C,CAArB;AACH;AACJ,KAJD,CAIE,OAAOU,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH;;AACD,WAAO,MAAM;AACTG,MAAAA,YAAY,CAACL,QAAD,CAAZ;AACH,KAFD;AAGH,GAZQ,EAYN,CAACR,aAAD,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,eAAe,EAAE,WAAnB;AAAgCC,MAAAA,MAAM,EAAE,CAAxC;AAA2CC,MAAAA,OAAO,EAAE;AAApD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCtB,QAAzC,CADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAAE,EAAZ;AAAgBG,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDpB,aAAjD,CADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAAhC;AAAkD,IAAA,OAAO,EAAEf,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAEwF,GAFxF,CAFJ,CADJ,eAQI;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE,EAAZ;AAAgBK,MAAAA,UAAU,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDzB,WAApD,CADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC,8BAA6BnB,aAAc,GAA5E,CAFJ,CARJ,CADJ;AAeH,CAjDD;;AAmDA,eAAeH,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nconst Task = ({ taskName, projectName, formattedTime, onDelete }) => {\n\n    const [remainingTime, setRemainingTime] = useState(0);\n\n    const deleteAction = () => {\n        onDelete(taskName);\n    }\n\n    const getFormattedTimeInSec = (ftime) => {\n        const timeArray = ftime.split(\":\");\n        return parseInt(timeArray[0] * 60 * 60) + parseInt(timeArray[1] * 60)\n    };\n\n    useEffect(() => {\n        setRemainingTime(getFormattedTimeInSec(formattedTime));\n        return () => {\n            setRemainingTime(0);\n        }\n    }, [])\n\n    useEffect(() => {\n        let timerRef;\n        try {\n            if (remainingTime) {\n                timerRef = setTimeout(() =>  setRemainingTime(remainingTime - 1), 1000);\n            }\n        } catch (err) {\n            console.log(\"err: \", err)\n        }\n        return () => {\n            clearTimeout(timerRef);\n        }\n    }, [remainingTime])\n\n    return (\n        <div style={{ backgroundColor: 'lightgrey', margin: 5, padding: 5 }}>\n            <div>\n                <span style={{ fontSize: 18, flex: 1 }}>{taskName}</span>\n                <div style={{ float: 'right' }}>\n                    <span style={{ fontSize: 22, marginRight: 30 }}>{remainingTime}</span>\n                    <Button variant=\"danger\" style={{ fontSize: 10 }} onClick={deleteAction}>X</Button>{' '}\n                </div>\n            </div>\n            <div style={{ marginTop: 5 }}>\n                <span style={{ fontSize: 14, fontWeight: 'bold' }}>{projectName}</span>\n                <span style={{ fontSize: 14 }}>{` (Total time in [hh:mm] is ${formattedTime})`}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}