{"ast":null,"code":"var _jsxFileName = \"/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/NewTask.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Task from './Task';\nimport Database from '../data.json';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Button from 'react-bootstrap/Button';\nimport Timekeeper from 'react-timekeeper';\n\nconst NewTask = ({\n  onClose,\n  onSubmit\n}) => {\n  const [taskName, setTaskName] = useState();\n  const [formattedTime, setFormattedTime] = useState('05:40');\n  const [projectName, setProjectName] = useState(Database.projectsList[0]);\n\n  const onCreateNewTask = () => {\n    if (taskName && projectName && formattedTime) {\n      onSubmit(taskName, projectName, formattedTime);\n    } else {\n      alert('All fields are required');\n    }\n  };\n\n  const onSelect = obj => {\n    setProjectName(obj.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '50%',\n      minWidth: 400,\n      backgroundColor: 'lightgrey',\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"taskNameInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Name of the task:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"taskNameInput\",\n    onChange: e => setTaskName(e.target.value),\n    value: taskName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"projectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Select Project Name:\"), /*#__PURE__*/React.createElement(Dropdown, {\n    options: Database.projectsList,\n    onChange: onSelect,\n    value: projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formattedTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Enter Time needed (hh:mm):\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"formattedTime\",\n    onChange: e => setFormattedTime(e.target.value),\n    value: formattedTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: onCreateNewTask,\n    style: {\n      position: 'relative',\n      top: '50%',\n      left: '30%',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: onClose,\n    style: {\n      position: 'relative',\n      top: '50%',\n      left: '30%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n};\n\nexport default NewTask;","map":{"version":3,"sources":["/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/NewTask.js"],"names":["React","useState","useEffect","Header","Task","Database","Dropdown","Button","Timekeeper","NewTask","onClose","onSubmit","taskName","setTaskName","formattedTime","setFormattedTime","projectName","setProjectName","projectsList","onCreateNewTask","alert","onSelect","obj","value","textAlign","margin","display","flex","justifyContent","width","minWidth","backgroundColor","padding","e","target","position","top","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Task from './Task';\nimport Database from '../data.json';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Button from 'react-bootstrap/Button';\nimport Timekeeper from 'react-timekeeper';\n\nconst NewTask = ({ onClose, onSubmit }) => {\n\n    const [taskName, setTaskName] = useState();\n    const [formattedTime, setFormattedTime] = useState('05:40');\n    const [projectName, setProjectName] = useState(Database.projectsList[0]);\n\n    const onCreateNewTask = () => {\n        if (taskName && projectName && formattedTime) {\n            onSubmit(taskName, projectName, formattedTime);\n        }\n        else {\n            alert('All fields are required');\n        }\n\n    };\n    const onSelect = (obj) => {\n        setProjectName(obj.value)\n    }\n\n    return (\n        <div>\n            <h2 style={{ textAlign: \"center\", margin: 10 }}>Create New Task</h2>\n            <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}>\n\n                <div style={{ width: '50%', minWidth: 400, backgroundColor: 'lightgrey', padding: 20 }}>\n                    {/* Task Name */}\n                    <label htmlFor=\"taskNameInput\">\n                        Name of the task:\n                </label>\n                    <br />\n                    <input\n                        id=\"taskNameInput\"\n                        onChange={e => setTaskName(e.target.value)}\n                        value={taskName}\n                    />\n                    <br />\n                    <br />\n\n\n                    {/* Project Name */}\n                    <label htmlFor=\"projectName\">Select Project Name:</label>\n                    <Dropdown options={Database.projectsList} onChange={onSelect} value={projectName} />\n                    <br />\n                    \n\n                    {/* Formatted Time */}\n                    <label htmlFor=\"formattedTime\">\n                        Enter Time needed (hh:mm):\n                </label>\n                    <br />\n                    <input\n                        id=\"formattedTime\"\n                        onChange={e => setFormattedTime(e.target.value)}\n                        value={formattedTime}\n                    />\n                    <br />\n                    \n                    <br />\n                    <Button variant=\"success\" onClick={onCreateNewTask} style={{\n                        position: 'relative', top: '50%', left: '30%', margin: 10\n                    }}>Submit</Button>\n                    <Button variant=\"danger\" onClick={onClose} style={{\n                        position: 'relative', top: '50%', left: '30%'\n                    }} >Close</Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}