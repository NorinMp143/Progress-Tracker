{"ast":null,"code":"var _jsxFileName = \"/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/TaskBox.js\";\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Database from '../data.json';\n\nconst TaskBox = ({\n  logout,\n  profileInfo\n}) => {\n  const [taskList, setTaskList] = useState(Database.taskList);\n  const [isNewTaskOpen, setNewTaskOpen] = useState(false);\n\n  const onCreateNewTask = (taskName, projectName, formattedTime) => {\n    const data = taskList;\n    data.push({\n      \"taskName\": taskName,\n      \"projectName\": projectName,\n      \"formattedTime\": formattedTime\n    });\n    setTaskList(data);\n    setNewTaskOpen(false);\n  };\n\n  const onDeleteAction = taskName => {\n    const data = taskList.filter(item => {\n      return item.taskName !== taskName;\n    });\n    setTaskList(data);\n  };\n\n  const onLogout = () => {\n    setTaskList([]);\n    logout();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    name: profileInfo.name,\n    logout: onLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), !isNewTaskOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '50%',\n      minWidth: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Progress Tracker\"), taskList.map(item => /*#__PURE__*/React.createElement(Task, {\n    key: item.taskName,\n    taskName: item.taskName,\n    projectName: item.projectName,\n    formattedTime: item.formattedTime,\n    onDelete: onDeleteAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => {\n      setNewTaskOpen(true);\n    },\n    style: {\n      position: 'relative',\n      top: '50%',\n      left: '45%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Create New Task\"), ' '), isNewTaskOpen && /*#__PURE__*/React.createElement(NewTask, {\n    onClose: () => {\n      setNewTaskOpen(false);\n    },\n    onSubmit: onCreateNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default TaskBox;","map":{"version":3,"sources":["/home/ayushi/Documents/Workspace/Final/Safeearth/src/components/TaskBox.js"],"names":["React","useState","Header","Task","NewTask","Button","Database","TaskBox","logout","profileInfo","taskList","setTaskList","isNewTaskOpen","setNewTaskOpen","onCreateNewTask","taskName","projectName","formattedTime","data","push","onDeleteAction","filter","item","onLogout","name","margin","display","flex","justifyContent","width","minWidth","textAlign","map","position","top","left"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Database from '../data.json';\n\nconst TaskBox = ({logout, profileInfo}) => {\n    const [taskList, setTaskList] = useState(Database.taskList);\n    const [isNewTaskOpen, setNewTaskOpen] = useState(false);\n\n    const onCreateNewTask = (taskName, projectName, formattedTime) => {\n        const data = taskList;\n        data.push({\n            \"taskName\": taskName,\n            \"projectName\": projectName,\n            \"formattedTime\": formattedTime\n        });\n        setTaskList(data);\n        setNewTaskOpen(false);\n    };\n\n    const onDeleteAction = (taskName) => {\n        const data = taskList.filter(item => {\n            return item.taskName !== taskName;\n        });\n        setTaskList(data);\n    }\n\n    const onLogout = () => {\n        setTaskList([]);\n        logout()\n    }\n\n    return (\n        <div >\n            {/* Header */}\n            <Header name={profileInfo.name} logout={onLogout} />\n\n            {/* Task List */}\n            {!isNewTaskOpen && (\n                <div style={{margin:20}}>\n                    <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}>\n                        <div style={{ width: '50%', minWidth: 400 }}>\n                        <h2 style={{textAlign:\"center\", margin: 20}}>Progress Tracker</h2>\n                            {\n                                taskList.map(item => (\n                                    <Task\n                                        key={item.taskName}\n                                        taskName={item.taskName}\n                                        projectName={item.projectName}\n                                        formattedTime={item.formattedTime}\n                                        onDelete={onDeleteAction}\n                                    />\n                                ))\n                            }\n\n                        </div>\n                    </div>\n                    <Button variant=\"success\" onClick={() => { setNewTaskOpen(true) }} style={{\n                      position:'relative', top:'50%', left:'45%'\n                    }}>Create New Task</Button>{' '}\n                </div>\n            )}\n\n            {/* Create New Task */}\n            {isNewTaskOpen && (\n                <NewTask\n                    onClose={() => { setNewTaskOpen(false) }}\n                    onSubmit={onCreateNewTask}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default TaskBox;\n"]},"metadata":{},"sourceType":"module"}